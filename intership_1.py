# -*- coding: utf-8 -*-
"""intership-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wMypDwLquh_0rX-2zgc-bg6oJYh0e-kX
"""

# ------------------------------------------
# Titanic Data Preprocessing - All Steps
# ------------------------------------------

# Step 1: Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder, StandardScaler

# Step 2: Upload the CSV file
from google.colab import files
uploaded = files.upload()

# Step 3: Load dataset
df = pd.read_csv("/content/Titanic-Dataset.csv")

# Step 4: Explore basic info
print("🔍 First 5 rows:\n", df.head())
print("\n📊 Dataset Info:")
print(df.info())
print("\n📈 Summary Statistics:\n", df.describe())

# Step 5: Handle missing values
print("\n❗ Missing values before handling:\n", df.isnull().sum())

# Fill numerical 'Age' with median
df['Age'].fillna(df['Age'].median(), inplace=True)

# Fill categorical 'Embarked' with mode
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)

# Drop rows with any remaining missing values (if any)
df.dropna(inplace=True)

print("\n✅ Missing values after handling:\n", df.isnull().sum())

# Step 6: Encode categorical variables
le = LabelEncoder()
df['Sex'] = le.fit_transform(df['Sex'])            # male=1, female=0
df['Embarked'] = le.fit_transform(df['Embarked'])  # example: S=2, C=0, Q=1

print("\n🔢 Encoded 'Sex' and 'Embarked':\n", df[['Sex', 'Embarked']].head())

# Step 7: Standardize numerical features
scaler = StandardScaler()
df[['Age', 'Fare']] = scaler.fit_transform(df[['Age', 'Fare']])

print("\n📐 Standardized 'Age' and 'Fare':\n", df[['Age', 'Fare']].head())

# Step 8: Visualize outliers using boxplots
plt.figure(figsize=(12, 5))
sns.boxplot(data=df[['Age', 'Fare']])
plt.title("📦 Boxplot of Age and Fare (Outlier Detection)")
plt.grid()
plt.show()

# Step 9: Remove outliers using IQR
for col in ['Age', 'Fare']:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower = Q1 - 1.5 * IQR
    upper = Q3 + 1.5 * IQR
    df = df[(df[col] >= lower) & (df[col] <= upper)]

print("\n✅ Dataset shape after removing outliers:", df.shape)